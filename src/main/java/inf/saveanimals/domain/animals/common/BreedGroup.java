package inf.saveanimals.domain.animals.common;

import lombok.Getter;

import java.util.Arrays;
import static inf.saveanimals.domain.animals.common.Breed.*;

/**
 *
 * - 축종(개/고양이/기타), 품종을 그룹으로 묶어서 표현.
 * - 기타, 믹스(견/묘)는 ETC 로 표시해두었다.
  */
@Getter
public enum BreedGroup {
    DOG("개", new Breed[]{
            GOLDEN_RETRIEVER,
            GREYHOUND,
            GREAT_DANE,
            GREAT_PYRENEES,
            COTON_DE_TULEAR,
            NEAPOLITAN_MASTIFF,
            NORFOLK_TERRIER,
            NORWICH_TERRIER,
            NORFOLK_TERRIER_2,
            NEWFOUNDLAND,
            DACHSHUND,
            DALMATIAN,
            DANDIE_DINMONT_TERRIER,
            DOGO_CANARIO,
            DOGO_ARGENTINO,
            DOBERMAN,
            TOSA,
            TOSA_MIX,
            DONGGYEONG_DOG,
            LABRADOR_RETRIEVER,
            LHASA_APSO,
            LAIKA,
            RABBIT_DACHSHUND,
            RAT_TERRIER,
            LAKELAND_TERRIER,
            RHODESIAN_RIDGEBACK,
            ROTTWEILER,
            ROTTWEILER_MIX,
            MALINOIS,
            MASTIFF,
            MALAMUTE,
            MALTESE,
            MANCHESTER_TERRIER,
            MINIATURE_DACHSHUND,
            MINIATURE_BULL_TERRIER,
            MINIATURE_SCHNAUZER,
            MINIATURE_POODLE,
            MINIATURE_PINSCHER,
            MEDIUM_POODLE,
            MITTEL_SPITZ,
            BASENJI,
            BASSET_HOUND,
            BERNESE_MOUNTAIN_DOG,
            BEDLINGTON_TERRIER,
            BELGIAN_GROENENDAEL,
            BELGIAN_SHEEPDOG,
            BELGIAN_TERVUREN,
            BELGIAN_SHEPHERD,
            BORDER_COLLIE,
            BORZOI,
            BOSTON_TERRIER,
            BOXER,
            BOLOGNESE,
            BOUVIER_DES_FLANDRES,
            BULL_TERRIER,
            BULLDOG,
            BRUSSELS_GRIFFON,
            BRITTANY_SPANIEL,
            BLACK_TERRIER,
            BEAGLE,
            BICHON_FRISE,
            BEARDED_COLLIE,
            VIZSLA,
            PAPILLON,
            SAMOYED,
            SALUKI,
            SAPSAL,
            SHAR_PEI,
            SAINT_BERNARD,
            CENTRAL_ASIAN_OVTCHARKA,
            SHETLAND_SHEEPDOG,
            SHEPHERD,
            SCHNAUZER,
            SCOTTISH_TERRIER,
            SCOTTISH_DEERHOUND,
            STAFFORDSHIRE_BULL_TERRIER,
            STAFFORDSHIRE_BULL_TERRIER_MIX,
            STANDARD_POODLE,
            SPITZ,
            SHIBA,
            SIBERIAN_HUSKY,
            SIBERIAN_LAIKA,
            SEEING_FRANCAISE,
            SHIH_TZU,
            SHIKOKU,
            SEALYHAM_TERRIER,
            SILKY_TERRIER,
            ANATOLIAN_SHEPHERD,
            AMERICAN_BULLDOG,
            AMERICAN_STAFFORDSHIRE_TERRIER,
            AMERICAN_STAFFORDSHIRE_TERRIER_MIX,
            AMERICAN_AKITA,
            AMERICAN_ESKIMO,
            AMERICAN_COCKER_SPANIEL,
            AMERICAN_PIT_BULL_TERRIER,
            AMERICAN_PIT_BULL_TERRIER_MIX,
            AMERICAN_BULLY,
            IRISH_RED_AND_WHITE_SETTER,
            IRISH_SETTER,
            IRISH_WOLF_HOUND,
            IRISH_SOFT_COATED_WHEATEN_TERRIER,
            AKITA,
            AFGHAN_HOUND,
            ALASKAN_MALAMUTE,
            AIREDALE_TERRIER,
            OVCHARKA,
            AUSTRALIAN_SHEPHERD,
            AUSTRALIAN_CATTLE_DOG,
            AUSTRALIAN_KELPIE,
            OLD_ENGLISH_BULLDOG,
            OLD_ENGLISH_SHEEPDOG,
            WEIMARANER,
            WIRE_FOX_TERRIER,
            YORKSHIRE_TERRIER,
            WOLFDOG,
            WEST_SIBERIAN_LAIKA,
            WEST_HIGHLAND_WHITE_TERRIER,
            WELSH_CORGI_CARDIGAN,
            WELSH_CORGI_PEMBROKE,
            WELSH_TERRIER,
            ITALIAN_GREYHOUND,
            ENGLISH_SETTER,
            ENGLISH_SPRINGER_SPANIEL,
            ENGLISH_COCKER_SPANIEL,
            ENGLISH_POINTER,
            GIANT_SCHNAUZER,
            JAPANESE_SPITZ,
            JACK_RUSSELL_TERRIER,
            GERMAN_SHEPHERD,
            GERMAN_WIREHAIRED_POINTER,
            GERMAN_POINTER,
            GERMAN_HUNTING_TERRIER,
            JEJU_DOG,
            JAPANESE_CHIN,
            JINDO,
            CHOW_CHOW,
            CHINESE_CRESTED_DOG,
            CHIHUAHUA,
            CANE_CORSO,
            KARELIAN_BEAR_DOG,
            KAI,
            CAVALIER_KING_CHARLES_SPANIEL,
            KENNELSPANIEL,
            KERRY_BLUE_TERRIER,
            KEESHOND,
            TOY_MANCHESTER_TERRIER,
            TOY_POODLE,
            TIBETAN_MASTIFF,
            PHARAOH_HOUND,
            PARSON_RUSSELL_TERRIER,
            PALEN,
            PUG,
            PEKINGESE,
            PETIT_BASSET_GRIFFON_VENDEEN,
            POMERANIAN,
            POINTER,
            FOX_TERRIER,
            POODLE,
            PULI,
            PUNGSAN_DOG,
            PRESA_CANARIO,
            FRENCH_BULLDOG,
            FRENCH_BRITTANY,
            FLAT_COATED_RETRIEVER,
            PLOTT_HOUND,
            PYRENEAN_MASTIFF,
            FILA_BRASILEIRO,
            PIT_BULL_TERRIER,
            PIT_BULL_TERRIER_MIX,
            HAVANESE,
            WHITE_RETRIEVER,
            WHITE_TERRIER,
            WHIPPET,
            MIXED_DOG_BREED
    }),
    CAT("고양이", new Breed[]{
            NORWEGIAN_FOREST,
            NEBELUNG,
            DEVON_REX,
            RUSSIAN_BLUE,
            RAGDOLL,
            RAGDOLL_RAGAMUFFIN,
            MANX,
            MUNCHKIN,
            MAINE_COON,
            BALINESE,
            BURMESE,
            BENGAL,
            BOMBAY,
            BRITISH_LONGHAIR,
            BRITISH_SHORTHAIR,
            BIRMAN,
            CHARTREUX,
            SIAMESE,
            SELKIRK_REX,
            SOMALI,
            SNOW_SHOE,
            SCOTTISH_FOLD,
            SPHYNX,
            SIBERIAN_FOREST,
            SINGAPURA,
            AMERICAN_SHORTHAIR,
            ABYSSINIAN,
            JAPANESE_BOBTAIL,
            TURKISH_ANGORA,
            TONKINESE,
            PERSIAN,
            PERSIAN_CHINCHILLA,
            HAVANA_BROWN,
            HIGHLAND_FOLD,
            MIXED_CAT_BREED
    }),
    ETC("기타축종", new Breed[]{}); // 기타축종

    private String breed;
    private Breed[] containBreeds;

    BreedGroup(String breed, Breed[] containBreeds) {
        this.breed = breed;
        this.containBreeds = containBreeds;
    }

    public static BreedGroup findGroup(Breed searchTarget) {
        return Arrays.stream(BreedGroup.values())
                .filter(group -> hasBreedOption(group, searchTarget))
                .findAny()
                .orElse(BreedGroup.ETC);
    }

    private static boolean hasBreedOption(BreedGroup from, Breed searchTarget) {
        return Arrays.stream(from.containBreeds)
                .anyMatch(containBreed -> containBreed == searchTarget);
    }

    public String getBreed() {
        return breed;
    }

}
